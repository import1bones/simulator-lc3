name: CI - Continuous Integration

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]
  workflow_dispatch:

jobs:
  test:
    name: Run Tests and Analysis
    runs-on: ubuntu-latest

    # Reduced Python version matrix to minimize CI resource usage
    # Testing Python 3.9 (stable LTS) and 3.11 (latest stable)
    strategy:
      matrix:
        python-version: ['3.9', '3.11']  # Reduced matrix: stable LTS and latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake build-essential

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        python scripts/run_tests.py --install-deps
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Check environment setup
      run: |
        python scripts/run_tests.py --check-env

    - name: Fix CMakeLists.txt case sensitivity (if needed)
      run: |
        # Fix case sensitivity issues with CMakeLists.txt files
        for dir in mem state_machine type; do
          if [ -f "$dir/CmakeLists.txt" ] && [ ! -f "$dir/CMakeLists.txt" ]; then
            mv "$dir/CmakeLists.txt" "$dir/CMakeLists.txt"
            echo "Fixed case sensitivity: $dir/CMakeLists.txt"
          fi
        done

    - name: Build C++ simulator with Python bindings
      run: |
        python scripts/run_tests.py --build

    - name: Fix Python bindings path (if needed)
      run: |
        python scripts/fix_python_bindings.py

    - name: Verify simulator module is available
      run: |
        python scripts/run_tests.py --check-env

    - name: Run comprehensive test suite
      run: |
        python scripts/run_tests.py --basic --instructions --memory --io --coverage --html-report

    - name: Run ISA analysis
      run: |
        python analysis/enhanced_isa_analysis.py

    - name: Generate auto-documentation
      run: |
        python scripts/auto_documentation.py

    - name: Run project validation
      run: |
        python scripts/validate_project.py

    - name: Generate workflow summary
      if: always()
      run: |
        python scripts/github_summary.py

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-python-${{ matrix.python-version }}
        path: |
          reports/
          data/
          htmlcov/
          .coverage

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      if: matrix.python-version == '3.9'
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  quality:
    name: Code Quality Analysis
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black pylint mypy
        pip install pytest pytest-cov

    - name: Run linting
      run: |
        flake8 scripts/ analysis/ tests/ --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 scripts/ analysis/ tests/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Check code formatting
      run: |
        black --check scripts/ analysis/ tests/

    - name: Run static type checking
      continue-on-error: true
      run: |
        mypy scripts/ analysis/ || true

  benchmark:
    name: Performance Benchmarking
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest-benchmark
        sudo apt-get update
        sudo apt-get install -y cmake build-essential

    - name: Build simulator
      run: |
        mkdir -p build
        cd build
        cmake -DBUILD_PYTHON_BINDINGS=ON ..
        make -j$(nproc)

    - name: Run performance benchmarks
      run: |
        python3 scripts/benchmark_programs.py
        python3 analysis/enhanced_isa_analysis.py

    - name: Upload benchmark results
      uses: actions/upload-artifact@v4
      with:
        name: benchmark-results
        path: |
          data/enhanced_isa_*.json
          reports/enhanced_isa_*.md
